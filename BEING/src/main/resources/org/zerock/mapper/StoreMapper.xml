<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.StoreMapper">

	<insert id="create">
		insert into prod_mng (prodnum, name, thumbnail, infoimage,introduce, price, dcprice, brand, keywd, category, freeyn, link, avggrade)
		values(PROD_MNG_SEQ.nextval,#{name}, #{thumbnail}, #{infoimage}, #{introduce},#{price},#{dcprice},#{brand},#{keywd},#{category},#{freeyn},#{link},0)
	</insert>

	<select id="read" resultType="org.zerock.domain.StoreVO">
		select
		*
		from
		prod_mng
		where prodnum = #{prodnum}
	</select>

	<select id="selectStoreList" resultType="org.zerock.domain.StoreVO">
 <![CDATA[
 select 
   *
 from 
   prod_mng 
 where prodnum > 0 
 order by prodnum desc
 ]]>
	</select>

	<select id="listStorePage" resultType="org.zerock.domain.StoreVO">
 <![CDATA[
 select 
   *
 from (
		SELECT ROW_NUMBER() OVER (ORDER BY PRODNUM) RNUM, prod_mng.*
		FROM prod_mng ORDER BY PRODNUM
		)
		WHERE RNUM BETWEEN ((#{page}-1)*#{perPageNum}+1) AND (#{page}*#{perPageNum}) 
 
 order by prodnum desc
 ]]>
	</select>

	<select id="listStoreCriteria" resultType="org.zerock.domain.StoreVO">
 <![CDATA[
 select 
   *
 from (
		SELECT ROW_NUMBER() OVER (ORDER BY PRODNUM) RNUM, prod_mng.*
		FROM prod_mng ORDER BY PRODNUM
		)
		WHERE RNUM BETWEEN ((#{page}-1)*#{perPageNum}+1) AND (#{page}*#{perPageNum})  
		order by prodnum desc
 
 ]]>
	</select>


	<update id="update">
		update prod_mng set name =#{name}, thumbnail =#{thumbnail}, infoimage =#{infoimage}, introduce =#{introduce}, 
		price =#{price}, dcprice =#{dcprice}, brand =#{brand}, keywd =#{keywd}, category =#{category}, freeyn =#{freeyn}, 
		link =#{link}
		where prodnum = #{prodnum}
	</update>

	<delete id="delete">
		delete from prod_mng where prodnum = #{prodnum}
	</delete>



	<select id="countStorePaging" resultType="int">
 <![CDATA[
 select 
   count(prodnum) 
 from 
   prod_mng 
 where 
   prodnum > 0 
 ]]>
	</select>
	
	
	<select id="listQuery" parameterType="hashmap" resultType="org.zerock.domain.StoreVO">
		SELECT
			*
		FROM PROD_MNG
		WHERE ${query} = #{content}
	</select>

 <!--
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and title like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				and content like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'w'.toString()">
				and writer like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'tc'.toString()">
				and ( title like CONCAT('%', #{keyword}, '%') OR content like
				CONCAT('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'cw'.toString()">
				and ( content like CONCAT('%', #{keyword}, '%') OR writer like
				CONCAT('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'tcw'.toString()">
				and ( title like CONCAT('%', #{keyword}, '%')
				OR
				content like CONCAT('%', #{keyword}, '%')
				OR
				writer like CONCAT('%', #{keyword}, '%'))
			</if>
		</if>
	</sql>

	<select id="listSearch" resultType="StoreVO">
<![CDATA[  
  select * 
  from tbl_board 
  where bno > 0 
]]>

		<include refid="search"></include>
  
<![CDATA[    
  order by bno desc
  limit #{pageStart}, #{perPageNum}
]]>
	</select>

	<select id="listSearchCount" resultType="int">
<![CDATA[  
  select count(bno) 
  from tbl_board 
  where bno > 0 
]]>
		<include refid="search"></include>

	</select>
 -->

 <!-- 
<update id="updateReplyCnt">
  update tbl_board set replycnt = replycnt + #{amount} where bno = #{bno}
</update>


<update id="updateViewCnt">
  update tbl_board set viewcnt = viewcnt +1 where bno = #{bno}
</update>


 
<insert id="addAttach">
insert into tbl_attach(fullname, bno) values (#{fullName}, LAST_INSERT_ID())
</insert> 


<select id="getAttach" resultType="string">
select fullname from tbl_attach where bno = #{bno} order by regdate
</select> 

 
<delete id="deleteAttach">
delete from tbl_attach where bno = #{bno}
</delete>

<insert id="replaceAttach">
insert into tbl_attach(fullname, bno) values (#{fullName}, #{bno})
</insert>
   -->
 
</mapper>
