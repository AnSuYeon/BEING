<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.BoardMapper">

	<insert id="create">
		INSERT INTO WRITING
		(NUM,EMAIL,TYPE,ACREAGE,BUDGET,FIELD,SPACE,TITLE,CONTENTOF,REGISTDAY,NAME,READCOUNT)
		values(WRITING_SEQ.nextval,#{email},
		#{type},#{acreage},#{budget},#{field},#{space},#{title},#{contentOf},SYSDATE,#{name},0)
	</insert>

	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 boardVO 는 mybatis-confg.xml 에 Alias 되어 
		있습니다. -->
	<select id="read" resultType="org.zerock.domain.BoardVO">
		SELECT NUM
		, EMAIL
		, NAME
		, TYPE
		,
		ACREAGE
		, BUDGET
		, FIELD
		, SPACE
		, TITLE
		, CONTENTOF
		, REGISTDAY
		FROM WRITING
		WHERE NUM = #{num}
	</select>

	<update id="readCount" parameterType="org.zerock.domain.BoardVO">
		UPDATE WRITING
		SET READCOUNT = READCOUNT+1
		WHERE NUM= #{NUM}
	</update>

	<update id="update">
		UPDATE WRITING SET
		TYPE=#{type}
		,ACREAGE=#{acreage}
		,BUDGET=#{budget}
		,FIELD=#{field}
		,SPACE=#{space}
		,TITLE=#{title}
		,CONTENTOF=#{contentOf}
		WHERE NUM = #{num}
	</update>

	<delete id="delete">
		delete from WRITING where NUM = #{num}
	</delete>

	<select id="selectBoardList"
		resultType="org.zerock.domain.BoardVO">
		SELECT NUM
		, EMAIL
		, NAME
		, TYPE
		, ACREAGE
		, BUDGET
		, FIELD
		,
		SPACE
		, TITLE
		, CONTENTOF
		, REGISTDAY
		, READCOUNT
		FROM WRITING
		ORDER BY NUM
		DESC
	</select>

	<select id="selectBoardList2"
		resultType="org.zerock.domain.BoardVO">
		SELECT NUM
		, EMAIL
		, NAME
		, TYPE
		, ACREAGE
		, BUDGET
		, FIELD
		,
		SPACE
		, TITLE
		, CONTENTOF
		, REGISTDAY
		FROM WRITING
		WHERE NUM=2
		ORDER BY NUM
		DESC
	</select>

	<select id="listPage" resultType="org.zerock.domain.BoardVO">
 <![CDATA[
 SELECT RNUM, NUM
		, EMAIL
		, NAME
		, TYPE
		, ACREAGE
		, BUDGET
		, FIELD
		, SPACE
		, TITLE
		, CONTENTOF
		, REGISTDAY
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY NUM) RNUM, A.*
		FROM WRITING A ORDER BY NUM
		)
		WHERE RNUM BETWEEN ((#{page}-1)*#{perPageNum}+1) AND (#{page}*#{perPageNum}) 
		order by num desc, REGISTDAY desc
 		
 ]]>
	</select>

	<select id="listCriteria" resultType="org.zerock.domain.BoardVO">
 <![CDATA[
 select RNUM, NUM
		, EMAIL
		, NAME
		, TYPE
		, ACREAGE
		, BUDGET
		, FIELD
		, SPACE
		, TITLE
		, CONTENTOF
		, REGISTDAY
		, READCOUNT
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY NUM) RNUM, A.*
		FROM WRITING A ORDER BY NUM
		)
		WHERE RNUM BETWEEN ((#{page}-1)*#{perPageNum}+1) AND (#{page}*#{perPageNum})  
		order by num desc, REGISTDAY desc
 ]]>
		<!-- WHERE RNUM BETWEEN 1 AND 10 -->
		<!-- WHERE RNUM BETWEEN #{pageStart}+1 AND 10 -->
	</select>

	<select id="countPaging" resultType="int">
 <![CDATA[
 select 
   count(num) 
 from 
   writing 
 where 
   num > 0 
 ]]>
	</select>

	<!-- =============================================================================== -->
	<select id="selectBoardFileList"
		resultType="org.zerock.domain.FileVO">
		SELECT FILENO, FILENAME, REALNAME, FILESIZE
		FROM board_file
		WHERE num=#{num}
		ORDER BY FILENO DESC
	</select>

	<select id="selectBoardFileList1"
		resultType="org.zerock.domain.FileVO">
		select fileno, filename, realname, filesize
		from (
		SELECT rownum, FILENO, FILENAME, REALNAME, FILESIZE
		FROM board_file
		WHERE num= #{num}
		ORDER BY FILENO
		) a
		where rownum = 1
	</select>

	<insert id="insertBoardFile"
		parameterType="org.zerock.domain.FileVO">
		INSERT INTO board_file (FILENO,NUM, FILENAME, REALNAME,
		FILESIZE)
		VALUES (FILE_SEQ.nextval, WRITING_SEQ.currval, #{filename},
		#{realname},
		#{filesize})
	</insert>

	<insert id="updateBoardFile"
		parameterType="org.zerock.domain.FileVO">
		INSERT INTO board_file (FILENO,NUM, FILENAME, REALNAME,
		FILESIZE)
		VALUES (FILE_SEQ.nextval, ${parentPK}, #{filename},
		#{realname},
		#{filesize})
	</insert>

	<delete id="deleteBoardFile">
		DELETE
		FROM board_file
		WHERE num =#{num}

	</delete>

	<!-- 검색기능 -->

	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and TITLE like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				and CONTENTOF like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'w'.toString()">
				and NAME like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'tc'.toString()">
				and ( TITLE like CONCAT('%', #{keyword}, '%') OR
				CONTENTOF like
				CONCAT('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'cw'.toString()">
				and ( CONTENTOF like CONCAT('%', #{keyword}, '%') OR NAME
				like
				CONCAT('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'tcw'.toString()">
				and ( TITLE like CONCAT('%', #{keyword}, '%')
				OR
				CONTENTOF
				like CONCAT('%', #{keyword}, '%')
				OR
				NAME like CONCAT('%', #{keyword},
				'%'))
			</if>
		</if>
	</sql>

	<select id="listSearch" resultType="org.zerock.domain.BoardVO">
<![CDATA[ 
 select * 
 from WRITING 
 where NUM > 0 
]]>
		<include refid="search"></include>
 
<![CDATA[ 
 order by NUM desc
 limit #{pageStart}, #{perPageNum}
]]>
	</select>

	<select id="listSearchCount" resultType="int">
<![CDATA[ 
 select count(NUM) 
 from WRITING 
 where NUM > 0 
]]>
		<include refid="search"></include>
	</select>

	<!-- 테스트 -->

	<!-- parameterType 를 지정하여 ${var} 의 타입을 지정하여 사용할수있다. -->
	<select id="listQuery" parameterType="String"
		resultType="org.zerock.domain.BoardVO">
		SELECT NUM
		, EMAIL
		, NAME
		, TYPE
		, ACREAGE
		, BUDGET
		, FIELD
		,
		SPACE
		, TITLE
		, CONTENTOF
		, REGISTDAY
		, READCOUNT
		FROM WRITING
		WHERE
		${param1} LIKE CONCAT('%', CONCAT(#{param2}, '%'))
	</select>

	<!-- 조회순 정렬 리스트 -->
	<select id="listReadCount"
		resultType="org.zerock.domain.BoardVO">
 <![CDATA[
 select RNUM, NUM
		, EMAIL
		, NAME
		, TYPE
		, ACREAGE
		, BUDGET
		, FIELD
		, SPACE
		, TITLE
		, CONTENTOF
		, REGISTDAY
		, READCOUNT
		FROM (
		SELECT ROW_NUMBER() OVER (ORDER BY NUM) RNUM, A.*
		FROM WRITING A ORDER BY NUM
		)
		WHERE RNUM BETWEEN ((#{page}-1)*#{perPageNum}+1) AND (#{page}*#{perPageNum})  
		order by readcount desc
 ]]>
		<!-- WHERE RNUM BETWEEN 1 AND 10 -->
		<!-- WHERE RNUM BETWEEN #{pageStart}+1 AND 10 -->
	</select>

	<select id="selectByEmail"
		resultType="org.zerock.domain.BoardVO">
		select * FROM WRITING WHERE EMAIL = #{email}
	</select>

</mapper>
